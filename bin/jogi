#!/usr/bin/env ruby

require_relative '../lib/jogi'

require 'json'
require 'yaml'
require 'thor'

class JogiCommand < Thor
  package_name "Jogi"
  default_command :size

  desc 'size', 'Get size of images or videos'
  option :yaml, type: :boolean, aliases: '-y', desc: 'Output result as YAML'
  option :css, type: :boolean, aliases: '-c', desc: 'Output result as CSS'
  def size(path)
    result = Jogi.size(path)
    output(result, options)
  end

  desc 'duration', 'Get durations of videos'
  option :format, type: :boolean, aliases: '-f', desc: 'Format duration (seconds to HH:MM:SS)'
  option :format_template, type: :string, aliases: '-F', desc: 'Set format template (hms or ms)'
  option :yaml, type: :boolean, aliases: '-y', desc: 'Output result as YAML'
  def duration(path)
    result = Jogi.duration(path, formatted: options.format?)
    output(result, options)
  end

  private
    def output(result, options)
      detect_format = ->(opts) {
        if options.yaml?
          :yaml
        elsif options.css?
          :css
        else
          :json
        end
      }

      case detect_format.call(options)
      when :yaml
        puts result.to_yaml
      when :css
        puts result.map {|image|
          "img.#{File.basename(image['name'], '.*')} {
  width: #{image['width']}px;
  height: #{image['height']}px;
}"}
      else 
        puts JSON.pretty_generate(result)
      end
    end
end

JogiCommand.start

